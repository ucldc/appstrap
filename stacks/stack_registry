#!/usr/bin/env bash

if [[ -n "$DEBUG" ]]; then 
  set -x
fi

set -o pipefail  # trace ERR through pipes
set -o errtrace  # trace ERR through 'time command' and other functions
set -o nounset   ## set -u : exit the script if you try to use an uninitialised variable
set -o errexit   ## set -e : exit the script if any statement returns a non-true return value

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # http://stackoverflow.com/questions/59895
cd $DIR

. stack_run.sh  # gives us `stack_run_batch`

export LD_LIBRARY_PATH="${HOME}/pkg/lib:${HOME}/servers/shibboleth/lib"

. $DIR/../setenv.sh

stack_run_batch "../pmake" registry.pkgsrc.txt
pip install lxml
if [[ ! -f "${HOME}/pkg/bin/python" ]]; then
    ln -s ${HOME}/pkg/bin/python2.7 ${HOME}/pkg/bin/python
fi
../cdl/get_java
./monit_binary
mkdir -p ${HOME}/tmp
../shib_it -p ${HOME}/servers/shibboleth -o ${HOME}/pkg -t ${HOME}/tmp
../roll_test_certs

# okay, now we should have a good stack set up, let's install and configure the app!
cd ../ansible
./init.sh
set +u
. bin/activate
pip install -r requirements-registry.txt --use-mirrors
set -u
ansible-playbook -i host_inventory registry-playbook.yml
cd
ln -f -s appstrap/bashrc/role-account .bashrc

