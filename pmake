#!/usr/bin/env bash

# `pmake` script 
# wrapper for http://www.pkgsrc.org

if [[ -n "$DEBUG" ]]; then
  set -x
fi

# I read somewhere not to `set -eu` like this, because it does not always
# do what one expects trying to get the script to stop on a failure,
# better to check command status explicitly
set -eu

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # http://stackoverflow.com/questions/59895
# need to hack the path during upgrades, if `bmake` is already here; we have already hacked the path.
# ; need a better test?
# test if command is (not) on the path http://stackoverflow.com/a/677212/1763984
if  ! command -v bmake >/dev/null 2>&1 ; then
    set +u
    . "$DIR/setenv.sh"
    set -u
fi

# bootstrap our boostrap, if we have not been here before
if [ ! -e "$HOME/pkgsrc" ]; then
    echo "installing pkgsrc"
    cd
    git clone git://github.com/jsonn/pkgsrc.git
    cd pkgsrc/bootstrap
    tag=`git rev-parse --short --verify HEAD`  # http://stackoverflow.com/a/949391/1763984
    ./bootstrap --prefix "$HOME/pkgbld/$tag" --pkgdbdir "$HOME/pkgbld/$tag/var/db/pkg" --unprivileged
    cd
    ln -s "pkgbld/$tag" pkg
fi

# TODO: set BINPKG_SITES to point to pre-built packages

# for each package named on the command line; make and install it
# http://stackoverflow.com/a/255913/1763984

export PKG_JVM_DEFAULT=sun-jdk7
for pkg in "$@"
do
    # check if the package is already installed
    cd "${HOME}/pkgsrc/$pkg"

    package_name=`bmake info | head -1`
    package_name=${package_name/Information for /}
    package_name=${package_name/:/}
    set +e
    if pkg_info -e "$package_name"; then
        echo "already installed"
    else
        set -e
        echo "installing $pkg"
        # http://netbsd.org/docs/pkgsrc/build.html#build.helpful-targets
        bmake clean
        # bmake clean-depends
        bmake install 
        bmake clean
        bmake clean-depends
    fi
done

# TODO:? usage if no arguments are supplied?

# Copyright Â© 2013, Regents of the University of California
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without 
# modification, are permitted provided that the following conditions are met:
# 
# - Redistributions of source code must retain the above copyright notice, 
#   this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright notice, 
#   this list of conditions and the following disclaimer in the documentation 
#   and/or other materials provided with the distribution.
# - Neither the name of the University of California nor the names of its
#   contributors may be used to endorse or promote products derived from this 
#   software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
